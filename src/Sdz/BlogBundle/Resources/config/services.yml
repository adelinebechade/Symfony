parameters:
#  sdz_blog.example.class: Sdz\BlogBundle\Example

services:
    sdzblog.censure_listener:
        class: Sdz\BlogBundle\Bigbrother\CensureListener
        arguments: [[1, 2], @mailer]
        tags:
            - { name: kernel.event_listener, event: sdzblog.bigbrother.post_message, method: onMessagePost }

    sdzblog.beta_listener:
        class: Sdz\BlogBundle\Beta\BetaListener
        arguments: ["2013-12-06"]
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse, priority: 2 }

    sdz_blog.antispam:
        class: Sdz\BlogBundle\Antispam\SdzAntispam
        arguments: [@mailer, 3]
        calls:
            - [ setLocale, [ %locale% ] ]
        tags:
            - { name: twig.extension }

    sdz_blog.ckeditor:
        class: Sdz\BlogBundle\Form\Type\CkeditorType
        tags:
            - { name: form.type, alias: ckeditor }

    sdzblog.validator.antiflood:                             # Le nom du service
        class: Sdz\BlogBundle\Validator\AntiFloodValidator   # La classe du service, ici notre validateur déjà créé
        arguments: [@request, @doctrine.orm.entity_manager]  # Les données qu'on injecte au service : la requête et l'EntityManager
        scope: request                                       # Comme on injecte la requête, on doit préciser ce scope
        tags:
            - { name: validator.constraint_validator, alias: sdzblog_antiflood }  # C'est avec l'alias qu'on retrouvera le service
